name: ParaBank Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run tests daily at 6 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch:
    # Allow manual triggering

jobs:
  test:
    name: Run ParaBank Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Create package.json
      run: |
        cat > package.json << 'EOF'
        {
          "name": "parabank-tests",
          "version": "1.0.0",
          "description": "ParaBank automated test suite",
          "main": "test.js",
          "scripts": {
            "test": "node test.js",
            "test:headed": "HEADLESS=false node test.js"
          },
          "dependencies": {
            "playwright": "^1.40.0"
          },
          "devDependencies": {},
          "author": "Test Automation Team",
          "license": "MIT"
        }
        EOF
        
    - name: Install dependencies
      run: npm install
      
    - name: Install Playwright browsers
      run: npx playwright install chromium
      
    - name: Run ParaBank Tests
      run: npm test
      env:
        CI: true
        HEADLESS: true
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          test-results/
          Test_Execution_Report.html
        retention-days: 30
        
    - name: Upload test report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-report
        path: Test_Execution_Report.html
        retention-days: 30
        
    - name: Comment test results on PR
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          try {
            const reportPath = 'Test_Execution_Report.html';
            if (fs.existsSync(reportPath)) {
              const report = fs.readFileSync(reportPath, 'utf8');
              const summary = report.includes('PASSED') ? '✅ Tests PASSED' : '❌ Tests FAILED';
              
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `## Test Results\n\n${summary}\n\nDetailed test report is available in the artifacts.`
              });
            }
          } catch (error) {
            console.log('Could not post test results comment:', error.message);
          }